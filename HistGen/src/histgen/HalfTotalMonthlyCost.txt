
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  s.start/FW
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  Fixed/JJ
  Cost/NNP
  --/:
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Rent/NN)
  -/:
  $/$
  500/CD
  Internet/NNP
  -/:
  $/$
  45/CD
  (NE Electric/NNP)
  -/:
  $/$
  50/CD
  ?/.
  ?/.
  $/$
  30/CD
  Gas/heating/NNP
  -/:
  ?/.
  ?/.
  Car-gas/NNP
  -/:
  $/$
  60/CD
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  (NE Variable/JJ)
  (NE Cost/NN)
  --/:
  --/:
  --/:
  --/:
  --/:
  -/:
  Food-home/JJ
  -/:
  $/$
  100/CD
  rough/JJ
  esitimate/NN
  Food-lunch/NNP
  -/:
  $/$
  100/CD
  rough/JJ
  estimat/NN
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  some\x00string/VBG
  ./.
  with\x15/VB
  funny/JJ
  characters/NNS
  ''/''
  \xf8/VBP
  0xc3/CD
  0xb8/CD
  U+00F9/NNP
  u/VBD
  0xc3/CD
  0xb9/CD
  U+00FA/NNP
  u/VBD
  0xc3/CD
  0xba/CD
  U+00FB/NNP
  u/VBD
  0xc3/CD
  0xbb/CD
  U+00FC/NNP
  u/VBD
  0xc3/CD
  0xbc/CD
  U+00FD/NNP
  y/VBD
  0xc3/CD
  0xbd/CD
  U+00FE/NNP
  \xfe/VBD
  0xc3/CD
  0xbe/CD
  \x80abc/JJ
  U+00FF/NNP
  y/NNP
  ////asdfasdfas/sdf///123//swder/234//NNP
  \u4f30/NNP
  \u4f31/NNP
  \u4f32/NNP
  \u4f33/NNP
  \u4f34/NNP
  \u4f35/NNP
  \u4f36/NNP
  \u4f37/NNP
  \u4f38/NNP
  \u4f39/NNP
  \u4f3a/NNP
  \u4f3b/NNP
  \u4f3c/NNP
  \u4f3d/NNP
  \u4f3e/NNP
  \u4f3f/NNP
  \u4f40/NNP
  \u4f41/NNP
  \u4f42/NNP
  \u4f43/NNP
  \u4f44/NNP
  \u4f45/NNP
  \u4f46/NNP
  \u4f47/NNP
  \u4f48/NNP
  \u4f49/NNP
  \u4f4a/NNP
  \u4f4b/NNP
  \u4f4c/NNP
  \u4f4d/NNP
  \u4f4e/NNP
  \u4f4f/NNP
  \u4f5b/NNP
  \u4f5c/NNP
  \u4f5d/NNP
  \u4f5e/NNP
  \u4f5f/NNP
  \u4f60/NNP
  \u4f61/NNP
  \u4f62/NNP
  \u4f63/NNP
  \u4f64/NNP
  \u4f65/NNP
  \u4f66/NNP
  \u4f67/NNP
  \u4f68/NNP
  \u4f69/NNP
  \u4f6a/NNP
  \u4f6b/NNP
  \u4f6c/NNP
  \u4f6d/NNP
  \u4f6e/NNP
  \u4f6f/NNP
  \u4f70/NNP
  \u4f71/NNP
  \u4f72/NNP
  \u4f73/NNP
  \u4f74/NNP
  \u4f75/NNP
  \u4f76/NNP
  \u4f77/NNP
  \u4f78/NNP
  \u4f79/NNP
  \u4f7a/NNP
  \u4f7b/NNP
  \u4f7c/NNP
  \u4f7d/NNP
  \u4f7e/NNP
  \u4f7f/NNP
  \u4f80/NNP
  \u4f81/NNP
  \u4f82/NNP
  \u4f83/NNP
  \u4f84/NNP
  \u4f85/NNP
  \u4f86/NNP
  \u4f87/NNP
  \u4f88/NNP
  \u4f89/NNP
  \u4f8a/NNP
  \u4f8b/NNP
  \u4f8c/NNP
  \u4f8d/NNP
  \u4f8e/NNP
  \u4f8f/NNP
  \u4f90/NNP
  \u4f91/NNP
  \u4f92/NNP
  \u4f93/NNP
  \u4f94/NNP
  \u4f95/NNP
  \u4f96/NNP
  \u4f97/NNP
  \u4f98/NNP
  \u4f99/NNP
  \u4f9a/NNP
  \u4f9b/NNP
  \u4f9c/NNP
  \u4f9d/NNP
  \u4f9e/NNP
  \u4f9f/NNP
  \u4fa0/NNP
  \u4fa1/NNP
  \u4fa2/NNP
  \u4fa3/NNP
  \u4fa4/NNP
  \u4fa5/NNP
  \u4fa6/NNP
  \u4fa7/NNP
  \u4fa8/NNP
  \u4fa9/NNP
  \u4faa/NNP
  \u4fab/NNP
  \u4fac/NNP
  \u4fad/NNP
  \u4fae/NNP
  \u4faf/NNP
  \u4fb0/NNP
  \u4fb1/NNP
  \u4fb2/NNP
  \u4fb3/NNP
  \u4fb4/NNP
  \u4fb5/NNP
  \u4fb6/NNP
  \u4fb7/NNP
  \u4fb8/NNP
  \u4fb9/NNP
  \u4fbb/NNP
  \u4fbc/NNP
  \u4fbd/NNP
  \u4fbe/NNP
  \u4fbf/NNP
  \u4fc0/NNP
  \u4fc1/NNP
  \u4fc2/NNP
  \u4fc3/NNP
  \u4fc4/NNP
  \u4fc5/NNP
  \u4fc6/NNP
  \u4fc7/NNP
  \u4fc8/NNP
  \u4fc9/NNP
  \u4fca/NNP
  \u4fcb/NNP
  \u4fcc/NNP
  \u4fcd/NNP
  \u4fce/NNP
  \u4fcf/NNP
  \u4fd0/NNP
  \u4fd1/NNP
  \u4fd2/NNP
  \u4fd3/NNP
  \u4fd4/NNP
  \u4fd5/NNP
  \u4fd6/NNP
  \u4fd7/NNP
  \u4fd8/NNP
  \u4fd9/NNP
  \u4fda/NNP
  \u4fdb/NNP
  \u4fdc/NNP
  \u4fdd/NNP
  \u4fde/NNP
  \u4fdf/NNP
  \u4fe0/NNP
  \u4fe1/NNP
  \u4fe2/NNP
  \u4fe3/NNP
  \u4fe4/NNP
  \u4fe5/NNP
  \u4fe6/NNP
  \u4fe7/NNP
  \u4fe8/NNP
  \u4fe9/NNP
  \u4fea/NNP
  \u4feb/NNP
  \u4fec/NNP
  \u4fed/NNP
  \u4fee/NNP
  \u4fef/NNP
  \u4ff0/NNP
  \u4ff1/NNP
  \u4ff2/NNP
  \u4ff3/NNP
  \u4ff4/NNP
  \u4ff5/NNP
  \u4ff6/NNP
  \u4ff7/NNP
  \u4ff8/NNP
  \u4ff9/NNP
  \u4ffa/NNP
  \u4ffb/NNP
  \u4ffc/NNP
  \u4ffd/NNP
  \u4ffe/NNP
  \u4fff/NNP
  $/$
  regex/NN
  =/NNP
  </NNP
  </NNP
  </NNP
  'END'/POS
  //NN
  (/(
  (/(
  ?/.
  :/:
  [/JJ
  \x00-\x7F/JJ
  ]/JJ
  #/#
  single-byte/JJ
  sequences/NNS
  0xxxxxxx/CD
  |/JJ
  [/JJ
  \xC0-\xDF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  #/#
  double-byte/JJ
  sequences/NNS
  110xxxxx/CD
  10xxxxxx/CD
  |/JJ
  [/JJ
  \xE0-\xEF/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  2/CD
  }/)
  #/#
  triple-byte/JJ
  sequences/NNS
  1110xxxx/CD
  10xxxxxx/CD
  */JJ
  2/CD
  |/JJ
  [/JJ
  \xF0-\xF7/JJ
  ]/NN
  [/NNP
  \x80-\xBF/NNP
  ]/NNP
  {/(
  3/CD
  }/)
  #/#
  quadruple-byte/JJ
  sequence/NN
  11110xxx/CD
  10xxxxxx/CD
  */JJ
  3/CD
  )/)
  {/(
  1,100/CD
  }/)
  #/#
  .../:
  one/CD
  or/CC
  more/JJR
  times/NNS
  )/)
  |/VBP
  ./.
  #/#
  anything/NN
  else/RB
  /x/JJ
  END/NNP
  ;/:
  \ud83d\udc3c/JJ
  preg_replace/NN
  (/(
  $/$
  regex/NN
  ,/,
  '/''
  $/$
  1/CD
  '/''
  ,/,
  $/$
  text/NN
  )/)
  ;/:
  //sample/JJ
  code/NN
  to/TO
  write/VB
  100/CD
  random/JJ
  ints/NNS
  to/TO
  a/DT
  file/NN
  ,/,
  1/CD
  per/IN
  line/NN
  \ud83d\udc3c\ud83d\udc3c/NN
  import/NN
  java.io.PrintStream/NN
  ;/:
  \ud83d\udc3c/CC
  import/VB
  java.io.IOException/NN
  ;/:
  import/NN
  java.io.File/NN
  ;/:
  \ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  import/NN
  java.util.Random/NN
  ;/:
  \ud83d\ude02\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67/CC
  public/JJ
  class/NN
  WriteToFile/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  try/VB
  {/(
  PrintStream/NNP
  writer/RB
  =/VBD
  new/JJ
  PrintStream/NNP
  (/(
  new/JJ
  File/NNP
  (/(
  ``/``
  randInts.txt/VB
  ''/''
  )/)
  )/)
  ;/:
  Random/NNP
  r/VB
  =/NNP
  new/JJ
  Random/NNP
  (/(
  )/)
  ;/:
  final/JJ
  int/NN
  (NE LIMIT/NNP)
  =/NNP
  100/CD
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  (NE LIMIT/NNP)
  ;/:
  i++/NN
  )/)
  {/(
  writer.println/NN
  (/(
  r.nextInt/FW
  (/(
  )/)
  )/)
  ;/:
  }/)
  writer.close/VBP
  (/(
  )/)
  ;/:
  }/)
  catch/NN
  (/(
  IOException/NNP
  e/RB
  )/)
  {/(
  System.out.println/NNP
  (/(
  ``/``
  An/DT
  error/NN
  occured/VBN
  while/IN
  trying/VBG
  to/TO
  write/VB
  to/TO
  the/DT
  file/NN
  ''/''
  )/)
  ;/:
  }/)
  }/)
  }/)
  public/JJ
  class/NN
  IntListTesterVer2/NNP
  {/(
  public/JJ
  static/JJ
  void/NN
  main/JJ
  (/(
  String/VBG
  [/NNP
  ]/NNP
  args/NN
  )/)
  {/(
  (NE IntListVer2/NNP)
  list1/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  (NE IntListVer2/NNP)
  list2/VBZ
  =/NNP
  new/JJ
  IntListVer2/NNP
  (/(
  100/CD
  )/)
  ;/:
  //equal/JJ
  when/WRB
  empty/NN
  ?/.
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  //add/JJ
  elements/NNS
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  100/CD
  ;/:
  i/JJ
  +=/VBP
  5/CD
  )/)
  {/(
  http/NN
  :/:
  //unicode.org/emoji/charts/emoji-list.html/JJ
  #/#
  1f3f4_e0067_e0062_e0077_e006c_e0073_e007f/CD
  }/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/VBN
  list2.add/NN
  (/(
  i/NN
  )/)
  ;/:
  \ud83c\udf32/CC
  }/)
  \ud83c\udf42\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f/NNP
  \ud83d\udca3/NNP
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  \ud83e\udd91\ud83e\udd91\ud83e\udd91/VBN
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  \1211251136451F3F4/CC
  \ud83d\udd78/VB
  list2.add/NN
  (/(
  200/CD
  )/)
  ;/:
  \ud83e\udd90/VBN
  System.out.println/NNP
  (/(
  ``/``
  Added/VBD
  200/CD
  to/TO
  list2/VB
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  :/:
  ``/``
  +/JJ
  list1.equals/NNS
  (/(
  list2/NN
  )/)
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list1/NN
  :/:
  ``/``
  +/FW
  list1/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  list2/NN
  :/:
  ``/``
  +/FW
  list2/NN
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Testing/NNP
  efficieny/NN
  of/IN
  (NE StringBuffer/NNP)
  versus/NN
  using/VBG
  String/NNP
  ./.
  ``/``
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Increasing/NNP
  list1/NN
  size/NN
  to/TO
  10000/CD
  ./.
  ``/``
  )/)
  ;/:
  Stopwatch/NNP
  s/VBP
  =/NNP
  new/JJ
  Stopwatch/NNP
  (/(
  )/)
  ;/:
  list1/CC
  =/VB
  new/JJ
  IntListVer2/NNP
  (/(
  )/)
  ;/:
  for/IN
  (/(
  int/NN
  i/NN
  =/VBP
  0/CD
  ;/:
  i/JJ
  </VBP
  10000/CD
  ;/:
  i++/NN
  )/)
  list1.add/NN
  (/(
  i/NN
  )/)
  ;/:
  (/(
  )/)
  #/#
  @/NNP
  (/(
  $/$
  &/CC
  (/(
  )/)
  &/CC
  (/(
  *1231561126543213651651555565/65156\561561\112\21\21\x9123u2111/JJ
  s.start/NN
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/)
  s.start/FW
  (/(
  )/)
  ;/:
  list1.toString/VBG
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  String/VBG
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  s.start/CC
  (/(
  )/)
  ;/:
  list1.toStringUsingStringBuffer/CC
  (/(
  )/)
  ;/:
  s.stop/FW
  (/(
  )/)
  ;/:
  System.out.println/NNP
  (/(
  ``/``
  Time/NNP
  to/TO
  build/VB
  String/VBG
  using/VBG
  (NE StringBuffer/NNP)
  class/NN
  :/:
  ``/``
  +/IN
  s.toString/VBG
  (/(
  )/)
  )/)
  ;/:
  }/)
  }/))